Boostrap 5 Tutorial:-

Box Model:- 
	The CSS box model is essentially a box that wraps around every HTML element. It consists of
: margins,  borders, padding, and the actual content.
Bootstrap: StartUp Layout:-
	The Start-Up layout of Bootstrap has available on the Bootstrap site.
Bootstrap: Container Layout:-

	Container Has two Types:- 
	1. Container
	2. container-fluid.
1. Container:- Container has a fixed width.
-They are used for the display size to be fixed.
2. Container-fluid:- Container-fluid has an auto-describe device length. 
- That is tacked the length of the device.

Bootstrap: Grid:-
	The Bootstrap grid system has 12 columns across the page.
	Class=” col” => Col class has auto-tack the device width and is easily set up.
There’s type is:-
	XS – Extra Small
	Sm – mobile/iPad
	Md – iPad/desktop
	Lg – 
	Xl – extra large


	Bootstrap has five classes:-

-.col auto column value.
-col-xs- (extra small devices screen width less than 576px)
-.col-sm- (small devices screen width equal to or greater than 576px.
-.col-md- (medium devices screen width equal to or greater than 768px.
-.col-lg- (large devices screen width equal to or greater than 992px) 
	..col-xl-(Extra large devices - screen width equal to or greater than 1200px)
	.. col-XXL- (Extra Extra large devices screen width equal to or greater than 1400px). 
Bootstrap:- Rough Layouts
	Simple Container
	Container With Header and Footer with Column.
	Container With Header, Footer, And 2 Column Layout.
	Container With Header, Footer, and 3-column Layout.

 Bootstrap: Theme Color 
Like:-
Primary :- Light Blue
Secondary:- dark gray
Success:- Green
Danger:- Red
Warning:- yellow.
Info:- 
Light:-  white
Dark:- Black.
	According to the theme.
Overflow:-
	Overflow has made the item not set in the frame adjust.
	Overflow:- Scroll.  => over-flow 
	Overflow-y:-  Scroll => make the scroll in row
	Overflow-x:- Scroll => make the scroll in column.

Breadcrumb:- BradCrums are used for the link to make the directions and they are mostly used in Mac.

Bootstrap : Navbar:- 
	An outer wrapper - Navbar 
	for branding - navbar-brand
	 For Links - navbar-link 
	For theming - navbar-light = In this class we can customize color using the class in CSS.
	for responsiveness - navbar-expand-lg 
	For Toggle navbar Menu - navbar-toggler
	 for the static position - fixed-top, fixed-bottom, sticky-top.
Position-Fixed:- Are Used For The fixed position when you scroll the screen the fixed item also the move.
Position Sticky:- Are like position-Fixed but the difference is when you scroll the screen sticky item are fixed in like header and footer. The screen scrolls but the item is fixed.

Bootstrap : Card:-
	card
	card-body
	card-title
	card-subtitle
	card-text
	card-link
	Size of image:- <img src="imglink/200*200" >   => 200 * 200 are described as width and height.
	
Bootstrap: Link:-
	<ul class="list-group"> <li class="list-group-item">Dapibus ac facilisis in </li> <li class="list-group-item">Porta ac consectetur ac</li></ul>  => This is the list item they add item list and add as per your use.
	Active:- This class In item is used for the item can active and background-color is blue.
	Disable:- Disable classes are used for the use of property that can make it unusable.

Bootstrap: Table:-
	Another wrapper-table
	For alternate rows colored - table-striped   => Alternate one row has been colorized.
	For hover rows - table-hover   => when the cursor moves on the table the table row has been colorized per cursor position.
	For theming - navbar-light 
	For aligning data- align-middle, align-bottom  => the data will give the position of the table like they have in the middle and set in the bottom.
	For responsiveness - table-responsive  => make a table size as per the device width.
	For breakpoint position - table-responsive-md, table-responsive-sm  

Bootstrap : Button:-
	Main class -  btn
	For colors - btn-primary, but-secondary => this makes the color of the button.
	for outline - btn-outline-primary, but-outline-secondary => this line makes the button outline.
	for size - btn-sm, btn-md  =>  This is the class used for the button size.
	Disabled state – disabled  => disable are used for the button size.

Bootstrap: Button Groups:-  
	This is an example of the bootstrap button group and they have to make the almost same class define as they have a group.
	<div class="btn-group" role="group" aria-label="Basic example">   <button type="button" class="btn btn-primary">Left</button>   <button type="button" class="btn btn-primary">Middle</button>   <button type="button" class="btn btn-primary">Right</button> </div>
Bootstrap : Alert:-
	Bootstrap alerts make the alert on the page refresh or make the button alert

	Code:-
	<div class="alert alert-primary" role="alert">
    <h4 class="alert-heading">Well done!</h4> A simple primary alert with
 <a href="#" class="alert-link">an example link </a>, 
Give it a click if you like.   </div>

	If you want to add functionality to remove the alert when clicking on add button add the Below Line:-class="btn-close" data-dismiss="alert" aria-lable="Close"
<div class="alert alert-warning alert-dismissible fade show" role="alert">
<strong>Holy guacamole!</strong>You should check in on some of the fields below.
<button type="button" class="btn-close" data-dismiss="alert" aria-lable="Close"></button>
</div>
Bootstrap : Model:-

	In the bootstrap model for the pop-Up view In the button, we have to make sure the add below two items:-
     1. data-bs-toggle="modal"
	2. data-bs-target="#exampleModal"   => id is matched with the pop-up code.

	The Pop-Up data show code:-
	<div class="modal" tabindex="-1">
	  <div class="modal-dialog">
	    <div class="modal-content">
	      <div class="modal-header">
	        <h5 class="modal-title">Modal title</h5>
	        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
	      </div>
	      <div class="modal-body">
	        <p>Modal body text goes here.</p>
	      </div>
	      <div class="modal-footer">
	        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
	        <button type="button" class="btn btn-primary">Save changes</button>
	      </div>
	    </div>
	  </div>
	</div>

Bootstrap : Collapse:-
	Collapse is used the data will show when the button will click and the collapse when the button is pressed.
	Make sure to add two items to the button:-
	1. data-bs-toggle="collapse"
	2.  data-bs-target="#multiCollapseExample2"
	3. aria-controls="multiCollapseExample1 multiCollapseExample2"

	The above item matches the container Id:-  

o	class="collapse multi-collapse" id="multiCollapseExample1"

Bootstrap: Forms:-

	Input :- - Form Label 	    - Form Control
	Radio & Checkbox :-  	    - form check 	    - Form Check label
	Select:-  	    - form-select
	Floating 	    - form-floating 

Bootstrap : DroupDown:-

	That will be using the Add the dropdown item:-
	And you can change the same class according to your use.
	Code:-

<div class=" dropdown show">
  <a class="btn btn-secondary dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
    Dropdown link
  </a>

  <div class="dropdown-menu" aria-labelledby="dropdownMenuLink">
    <a class="dropdown-item" href="#">Action</a>
    <a class="dropdown-item" href="#">Another action</a>
    <a class="dropdown-item" href="#">Something else here</a>
  </div>
</div>


Boostrap :- TripTool :-

	That will use when the mouse is hovering over the item on the message are the display.
	This method has two conditions:-
1. Add bootstrap and popper files in the layout 
2. Add a popper file before the bootstrap file.
=> 
=> <a href="#" data-toggle="tooltip" title="Some tooltip text!">Hover over me</a>

<!-- Generated markup by the plugin -->
<div class="tooltip bs-tooltip-top" role="tooltip">
  <div class="arrow"></div>
  <div class="tooltip-inner">
    Some tooltip text!
  </div>
</div>


Boostrap :- Popover:-

	 just like ToolTip - Popover used popper.js
	 -so before using it make sure you have includes it in your app.
	Code:-

<button type="button" class="btn btn-lg btn-danger" data-toggle="popover" title="Popover title" data-content="And here's Some amazing content. it's very engaging.Right?">Click tp toggle popover</button> 


Bootstrap: Progress:-  
	ProgressBar is used to make the display work of the process.
	And that defines are minimum and maximum value of the process bar.
	Code:-

   <div class="progress"> <div class="progress-bar" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>  <div class="progress"> <div class="progress-bar progress-bar-striped" role="progress bar" style="width:10%" aria-valuenow="10" aria-valuemin="0" aria-valuemax="100"></div> </div>

Bootstrap Spinners:- 
	“spinners” can be used to show the loading state in your projects. 
	They’re built only with HTML and CSS, meaning you don’t need any JavaScript to create them.
	 You will, however, need some custom JavaScript to toggle their visibility.
	 Their appearance, alignment, and sizing can be easily customized with our amazing utility classes. 
	For accessibility purposes, each loader here includes role="status" and a nested <span class="visually-hidden">Loading...</span>  <div class="spinner-border text-primary" role="status">   <span class="visually-hidden">Loading...</span> </div>  <div class="spinner-border text-Secondary"role="status">   <span class="visually-hidden">Loading...</span> </div>


Bootstrap :  Toasts:-

	 Toasts are lightweight notifications designed to mimic the push notifications that have been popularized by mobile and desktop operating systems. 
	They’re built with a flexbox, so they’re easy to align and position. 
	Code;-
 <div class="toast" role="alert" aria-live="assertive" aria-atomic="true">   <div class="toast-header">     <img src="..." class="rounded me-2" alt="...">     <strong class="me-auto">Bootstrap</strong>     <small class="text-mute">11 mins ago</small>     <button type="button" class="btn-close" data-dismiss="toast" aria-label="Close"></button>   </div>   <div class="toast-body">     Hello, world! This is a toast message.   </div> </div>    Bootstrap :  Typography:-  
	Typography is used for the common style used and they make the changes in position, border, etc.
	Standard code throughout
	 Common style guides 
	 Easy to understand and extend with new team members
	Headings, Padding, Gutters, Border, Background, Color, Text color, etc 
	Code:-
 <div class="container px-4"> <div class="row gx-5"> <div class="col"> <div class="p-3 border bg-light">Custom colomn padding</div> </div> </div> </div>


Bootstrap:  Range:-
 
	Create custom <input type="range"> controls with .form-range 
	Code:-
 <label for="customRange1" class="form-label">Example range</label> <input type="range" class="form-range" id="customRange1">

	 Disabled:-  Range property can make the disabled.  <label for="disabledRange" class="form-label">Disabled range</label> <input type="range" class="form-range" id="disabledRange" disabled>

	Min and max:-   It can make select the min and max values.


<label for="customRange2" class="form-label">Example range</label> <input type="range" class="form-range" min="0" max="5" id="customRange2">

	steps in the range:-   <label for="customRange3" class="form-label">Example range</label> <input type="range" class="form-range" min="0" max="5" step="0.5" id="customRange3">


Bootstrap: Figure:-
	
	Figure classes are used for the set image-like card and add the caption below the image.
	Anytime you need to display a piece of content—like an image with an optional caption, consider using a <figure>.
	Use the included .figure, .figure-img, and .figure-caption classes to provide some baseline styles for the HTML5 <figure> and <figcaption> elements. Images in figures have no explicit size, so be sure to add the .img-fluid class to your <img> to make it responsive.
	
	Code:-

<figure class="figure">   <img src="..." class="figure-img img-fluid rounded" alt="...">   <figcaption class="figure-caption">A caption for the above image.</figcaption> </figure>
	
	Bove code img tag is used for taking the image link,
	And the Figcaption is used for the add caption below the image.


Bootstrap Carousel:-
	This cursor is used for the slide bar to saw information on the screen.
	 The carousel is a slideshow for cycling through a series of content, built with CSS 3D transforms and a bit of JavaScript. 
	It works with a series of images, text, or custom markups. It also includes support for previous/next controls and indicators.
	Code:-
   <div id="carouselExampleSlidesOnly" class="carousel slide" data-bs-ride="carousel">   <div class="carousel-inner">     <div class="carousel-item active">       <img src="..." class="d-block w-100" alt="...">     </div>     <div class="carousel-item">       <img src="..." class="d-block w-100" alt="...">     </div>     <div class="carousel-item">       <img src="..." class="d-block w-100" alt="...">     </div>   </div> </div>

Bootstrap: Breadcrumb:- 

	Indicate the current page's location within a navigation hierarchy that automatically adds separators via CSS 
	 Easy way to provide users with navigation and quick jump to links 
	
	Code:-

<nav aria-label="breadcrumb">   <ol class="breadcrumb">     <li class="breadcrumb-item"><a href="#">Home</a></li>     <li class="breadcrumb-item"><a href="#">Library</a></li>     <li class="breadcrumb-item active" aria-current="page">Data</li>   </ol> </nav>


Bootstrap  : Accordions:-


	The accordion uses collapse internally to make it collapsible. To render an accordion that’s expanded, add the .open class on the .accordion,
	Easy way to provide users with navigation and quick jump to links.

	Important Classes to Remember:-   class="accordion" class="accoridon-item" class="accordion-body" class="accordion-body" collapsed

Bootstrap: Nav & Tabs :-

	Navigation available in Bootstrap shares general markup and styles, 
	from the base .nav class to the active and disabled states.
	Easy way to provide users with navigation and jump to links
	
	Code:-  <ul class="nav">   <li class="nav-item">     <a class="nav-link active" aria-current="page" href="#">Active</a>   </li>   <li class="nav-item">     <a class="nav-link" href="#">Link</a>   </li>   <li class="nav-item">     <a class="nav-link" href="#">Link</a>   </li>   <li class="nav-item">     <a class="nav-link disabled" href="#" tabindex="-1" aria-disabled="true">Disabled</a>   </li> </ul>
	

Bootstrap: Placeholders:-

	That can be used for the where the screen we loaded the screen displays some load content in the screen.
	placeholder can be used to enhance the experience of your application.
	They're built only with HTML and CSS, meaning you don't need any javascript to create them
	and don't need any javascript to create a theme
	Awesome experience for users when data is loading or when processing requests.

	Code:-  <div class="card" aria-hidden="true">   <img src="..." class="card-img-top" alt="...">    <div class="card-body">     <h5 class="card-title placeholder-glow">      <span class="placeholder col-6"></span>     </h5>      <p class="card-text placeholder-glow">       <span class="placeholder col-7"></span>       <span class="placeholder col-4"></span>       <span class="placeholder col-4"></span>       <span class="placeholder col-6"></span>       <span class="placeholder col-8"></span>     </p>     <a href="#" tabindex="-1" class="btn btn-primary disabled placeholder col-6"></a>   </div>  </div>   Bootstrap : Scrollspy:-

	They are used for the when I click any point of the section the display are go to that point when I click.
	Scrollspy toggles the .active class on the anchor (<a>) element when the element with the id referenced by the anchor's href is scrolled into view.
	ScrollSpy is best used with Navigation where users can be taken to a particular section quickly with smooth scrolling.
	Code;-    <li class="nav-item dropdown">       <a class="nav-link dropdown-toggle" data-bs-toggle="dropdown" href="#" role="button" aria-expanded="false">Dropdown</a>       <ul class="dropdown-menu">         <li><a class="dropdown-item" href="#scrollspyHeading3">Third</a></li>         <li><a class="dropdown-item" href="#scrollspyHeading4">Fourth</a></li>         <li><hr class="dropdown-divider"></li>         <li><a class="dropdown-item" href="#scrollspyHeading5">Fifth</a></li>       </ul>     </li> <h4 id="scroll spy-heading3">Third heading</h4>


Bootstrap:  Pagination:-

	 We use a large block of connected links for our pagination, making links hard to miss and easily scalable—all while providing large hit areas. 
	Pagination is built with a list of HTML elements so screen readers can announce the number of available links.
	 Use a wrapping <nav> element to identify it as a navigation section to screen readers and other assistive technologies. 
	Code:-
   <nav aria-label="Page navigation example">   <ul class="pagination">     <li class="page-item"><a class="page-link" href="#">Previous</a></li>     <li class="page-item"><a class="page-link" href="#">1</a></li>     <li class="page-item"><a class="page-link" href="#">2</a></li>     <li class="page-item"><a class="page-link" href="#">3</a></li>     <li class="page-item"><a class="page-link" href="#">Next</a></li>   </ul> </nav>


Bootstrap: position:- 
	That position is used for any data that will adjust the position on the screen. 
	Fixed:- These are used for when the screen is the scroll the alignment is fixed as it is their position.
	Sticky:- Sticky is used for the screen are scrolled the data will auto scrolls and the put the fixed the bottom or top.
	- fixed-top - fixed-bottom - sticky-top - sticky-bottom  <div class="fixed-top">...</div> <div class="sticky-top">...</div> <div class="sticky-bottom">...</div>

Bootstrap Border:-

	Use border utilities to add or remove an element’s borders. Choose from all borders or one at a time.
	important classes to remember :  
	below classes is the use of the given different sets of the border layout.
 - border - border-2/border-3/border-4/border-5 - border-top - border-end - border-start - border-bottom - border-border-success/border-danger/border-info/border-warning - border-opacity/border-opacity-100/border-opacity-75 border-opacity-50 - rounded - rounded/ rounded-pill/rounded-circle - rounded-0/ rounded-1/ rounded-2/ rounded-3/ rounded-5


bootstrap :- Text :-

	Easily realign text to components with text alignment classes.
	Important classes to remember:- 
	Below the class is the use of the set of text arrangements.
 - text-start - text-center - text-end  - text-wrap  = This will use the text set in the new line.  - text-break - text-lowercase - text-uppercase  - fs-1 /fs-2 / fs-3/ fs-5 - lh-1/ lg-base/ lh-lg

	text-decoration-underline / text-decoration-line-throught / text-decoration-none   Bootstrap : Shadows:-

	Add or remove shadows to elements with box-shadow utilities

	 Important classes to remember:-  <div class="shadow-none p-3 mb-5 bg-light rounded">No shadow</div> <div class="shadow-sm p-3 mb-5 bg-body rounded">Small shadow</div> <div class="shadow p-3 mb-5 bg-body rounded">Regular shadow</div> <div class="shadow-lg p-3 mb-5 bg-body rounded">Larger shadow</div>                   


